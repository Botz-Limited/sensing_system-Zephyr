/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_SENSOR_DATA_MESSAGES_ACTIVITY_MESSAGES_PB_H_INCLUDED
#define PB_SENSOR_DATA_MESSAGES_ACTIVITY_MESSAGES_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
/* --- Enums (Activity Specific) --- */
typedef enum _sensor_data_messages_ActivityMessageType {
    sensor_data_messages_ActivityMessageType_ACTIVITY_UNKNOWN_MESSAGE_TYPE = 0, /* Default value, should always be 0 */
    sensor_data_messages_ActivityMessageType_ACTIVITY_STEP_DATA = 1
} sensor_data_messages_ActivityMessageType;

/* Struct definitions */
/* --- Activity Data Message --- */
typedef struct _sensor_data_messages_ActivityData {
    uint32_t left_step_count; /* Left foot step count */
    uint32_t right_step_count; /* Right foot step count */
    uint16_t delta_ms; /* Delta time in milliseconds from previous packet (2 bytes, max 65535ms) */
} sensor_data_messages_ActivityData;

/* Activity specific message for logging session metadata */
typedef struct _sensor_data_messages_ActivitySensingData {
    pb_callback_t firmware_version;
    uint32_t sampling_frequency;
    sensor_data_messages_ActivityMessageType message_type; /* Uses ActivityMessageType */
} sensor_data_messages_ActivitySensingData;

/* Activity specific message for marking the end of a logging session */
typedef struct _sensor_data_messages_ActivitySessionEnd {
    uint64_t uptime_ms;
} sensor_data_messages_ActivitySessionEnd;

/* --- Main Wrapper Message for Activity logs ---
 Renamed to be unique for Activity logs */
typedef struct _sensor_data_messages_ActivityLogMessage {
    pb_size_t which_payload;
    union _sensor_data_messages_ActivityLogMessage_payload {
        sensor_data_messages_ActivityData activity_data;
        sensor_data_messages_ActivitySensingData sensing_data; /* Uses ActivitySensingData */
        sensor_data_messages_ActivitySessionEnd session_end; /* Uses ActivitySessionEnd */
    } payload;
} sensor_data_messages_ActivityLogMessage;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _sensor_data_messages_ActivityMessageType_MIN sensor_data_messages_ActivityMessageType_ACTIVITY_UNKNOWN_MESSAGE_TYPE
#define _sensor_data_messages_ActivityMessageType_MAX sensor_data_messages_ActivityMessageType_ACTIVITY_STEP_DATA
#define _sensor_data_messages_ActivityMessageType_ARRAYSIZE ((sensor_data_messages_ActivityMessageType)(sensor_data_messages_ActivityMessageType_ACTIVITY_STEP_DATA+1))


#define sensor_data_messages_ActivitySensingData_message_type_ENUMTYPE sensor_data_messages_ActivityMessageType




/* Initializer values for message structs */
#define sensor_data_messages_ActivityData_init_default {0, 0, 0}
#define sensor_data_messages_ActivitySensingData_init_default {{{NULL}, NULL}, 0, _sensor_data_messages_ActivityMessageType_MIN}
#define sensor_data_messages_ActivitySessionEnd_init_default {0}
#define sensor_data_messages_ActivityLogMessage_init_default {0, {sensor_data_messages_ActivityData_init_default}}
#define sensor_data_messages_ActivityData_init_zero {0, 0, 0}
#define sensor_data_messages_ActivitySensingData_init_zero {{{NULL}, NULL}, 0, _sensor_data_messages_ActivityMessageType_MIN}
#define sensor_data_messages_ActivitySessionEnd_init_zero {0}
#define sensor_data_messages_ActivityLogMessage_init_zero {0, {sensor_data_messages_ActivityData_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define sensor_data_messages_ActivityData_left_step_count_tag 1
#define sensor_data_messages_ActivityData_right_step_count_tag 2
#define sensor_data_messages_ActivityData_delta_ms_tag 3
#define sensor_data_messages_ActivitySensingData_firmware_version_tag 1
#define sensor_data_messages_ActivitySensingData_sampling_frequency_tag 2
#define sensor_data_messages_ActivitySensingData_message_type_tag 3
#define sensor_data_messages_ActivitySessionEnd_uptime_ms_tag 1
#define sensor_data_messages_ActivityLogMessage_activity_data_tag 1
#define sensor_data_messages_ActivityLogMessage_sensing_data_tag 4
#define sensor_data_messages_ActivityLogMessage_session_end_tag 5

/* Struct field encoding specification for nanopb */
#define sensor_data_messages_ActivityData_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   left_step_count,   1) \
X(a, STATIC,   SINGULAR, UINT32,   right_step_count,   2) \
X(a, STATIC,   SINGULAR, UINT32,   delta_ms,          3)
#define sensor_data_messages_ActivityData_CALLBACK NULL
#define sensor_data_messages_ActivityData_DEFAULT NULL

#define sensor_data_messages_ActivitySensingData_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   firmware_version,   1) \
X(a, STATIC,   SINGULAR, UINT32,   sampling_frequency,   2) \
X(a, STATIC,   SINGULAR, UENUM,    message_type,      3)
#define sensor_data_messages_ActivitySensingData_CALLBACK pb_default_field_callback
#define sensor_data_messages_ActivitySensingData_DEFAULT NULL

#define sensor_data_messages_ActivitySessionEnd_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT64,   uptime_ms,         1)
#define sensor_data_messages_ActivitySessionEnd_CALLBACK NULL
#define sensor_data_messages_ActivitySessionEnd_DEFAULT NULL

#define sensor_data_messages_ActivityLogMessage_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,activity_data,payload.activity_data),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,sensing_data,payload.sensing_data),   4) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,session_end,payload.session_end),   5)
#define sensor_data_messages_ActivityLogMessage_CALLBACK NULL
#define sensor_data_messages_ActivityLogMessage_DEFAULT NULL
#define sensor_data_messages_ActivityLogMessage_payload_activity_data_MSGTYPE sensor_data_messages_ActivityData
#define sensor_data_messages_ActivityLogMessage_payload_sensing_data_MSGTYPE sensor_data_messages_ActivitySensingData
#define sensor_data_messages_ActivityLogMessage_payload_session_end_MSGTYPE sensor_data_messages_ActivitySessionEnd

extern const pb_msgdesc_t sensor_data_messages_ActivityData_msg;
extern const pb_msgdesc_t sensor_data_messages_ActivitySensingData_msg;
extern const pb_msgdesc_t sensor_data_messages_ActivitySessionEnd_msg;
extern const pb_msgdesc_t sensor_data_messages_ActivityLogMessage_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define sensor_data_messages_ActivityData_fields &sensor_data_messages_ActivityData_msg
#define sensor_data_messages_ActivitySensingData_fields &sensor_data_messages_ActivitySensingData_msg
#define sensor_data_messages_ActivitySessionEnd_fields &sensor_data_messages_ActivitySessionEnd_msg
#define sensor_data_messages_ActivityLogMessage_fields &sensor_data_messages_ActivityLogMessage_msg

/* Maximum encoded size of messages (where known) */
/* sensor_data_messages_ActivitySensingData_size depends on runtime parameters */
/* sensor_data_messages_ActivityLogMessage_size depends on runtime parameters */
#define SENSOR_DATA_MESSAGES_ACTIVITY_MESSAGES_PB_H_MAX_SIZE sensor_data_messages_ActivityData_size
#define sensor_data_messages_ActivityData_size   16
#define sensor_data_messages_ActivitySessionEnd_size 11

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
